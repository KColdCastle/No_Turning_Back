generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  // @default(auto())를 사용하여 이 필드가 자동으로 증가되는 값임을 나타내며, @map("_id")를 사용하여 데이터베이스 내부에서 _id 필드로 매핑되도록 지정(DB내에서 id필드는 자동생성)
  // @db.ObjectId를 사용하여 MongoDB에서 ObjectID로 저장되어야 함을 지정
  bio      Gender
  post     Post[] // Post[] 타입으로 정의. 이 필드는 Profile과 Post 모델 간의 일대다(1:N) 관계
  email    String   @unique
  nickname String
  signAt   DateTime @default(now()) // @default(now())로 현재 시간을 기본값으로 설정
  updateAt DateTime @updatedAt // @updatedAt로 업데이트된 시간을 자동으로 기록
}

model Post {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  user           Profile   @relation(fields: [email], references: [email])
  email          String
  title          String
  content        String
  comments       Comment[] // Comment 모델의 배열 형태로, 해당 게시물과 연결된 댓글
  starting_price BigInt
  // current_price BigInt
  category       Category
  categoryname   String
  images         String[]
  // publicInfo PublicInfo @default(PUBLIC) // 기본값으로 PUBLIC를 설정한다
  // create_date DateTime 
  // end_date BigInt
  // update_date DateTime @updatedAt
  create_date    DateTime  @default(now())
  update_date    DateTime  @updatedAt
}

model Comment {
  cid         String     @id @default(auto()) @map("_id") @db.ObjectId
  post        Post       @relation(fields: [id], references: [id])
  id          String     @db.ObjectId
  guestemail  String
  content     String
  publicInfo  PublicInfo @default(PUBLIC)
  createAt    DateTime   @default(now())
  update_date DateTime   @updatedAt
}

enum Category {
  beauty
  hobby
  digital
  sport
  car
  etc
}
model Image{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  postId String
}
model ImageFile{
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

enum Role {
  USER
  ADMIN
}

enum PublicInfo {
  PUBLIC
  CLOSED
  DELETE
  BLOCKED
}

enum Gender {
  FEMALE
  MALE
  TRANS
}

// npx prisma generate
// npx prisma db push
